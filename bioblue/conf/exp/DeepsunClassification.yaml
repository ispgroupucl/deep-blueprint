# @package _global_
defaults:
  - override /module: base_classification


trainer:
  _target_: pytorch_lightning.Trainer
  max_epochs: 30
  gpus: ${gpus}
  auto_scale_batch_size: false
  log_every_n_steps: 2

# logger: []
logger:
  - _target_: pytorch_lightning.loggers.CSVLogger
    save_dir: 'csv_metrics'
  - _target_: pytorch_lightning.loggers.WandbLogger
    # name: 'test'
    project: 'Deepsun_classification'
    save_dir: "."

use_dtypes: "???"

use_classes: [ 'A','B','C','D','E','F','G','H','I','J','X']

module:
  _target_: bioblue.module.BaseClassifier
  classifier: "${model}"
  lr: 1e-4
  optimizer: torch.optim.AdamW
  # ######## WORKS
  loss:
    _target_: torch.nn.CrossEntropyLoss
  # class_weights: [1,1,1,1,1,1,1,1,1,1,1]
  
  scheduler:
    _target_: torch.optim.lr_scheduler.StepLR
    step_size: 250
    gamma: 0.9
    last_epoch: -1

model:
  _target_: bioblue.model.ConfResNet
  
  # input_format: ["image"]
  input_format: ["image", "angular_excentricity", "centroid_Lat" ]
  output_format: ["class"]

  classes: ${use_classes}
  
  model_cfg:
    _target_: bioblue.model.ModelConfig
  architecture:
    first: 32
    block_width: [32, 64, 128] 
    num_resnet_blocks: [6,6,6]
    cnn_input_size: ${dataset.train_dataset.transforms.0.standard_height}
    fcn_width: 500
    fcn_num_hidden: 3

  # _target_: bioblue.model.ConfUnet
  # model_cfg:
  #   _target_: bioblue.model.ModelConfig
  # block: double
  

dataset:
  _target_: bioblue.dataset.BioblueDataModule
  data_dir: "/globalscratch/users/n/s/nsayez/Classification_dataset/"
  dataset_name: "2002-2019"
  batch_size: 16
  num_workers: 12
  
  train_dataset:
    _target_: bioblue.dataset.DeepsunMaskedClassificationDatasetV2
    partition: "train"
    dtypes: ${use_dtypes}
    classes: ${use_classes}
    transforms:
      - _target_: bioblue.transforms.DeepsunRotateAndCropAroundGroup
        standard_height: 128
        standard_width: 128
      - _target_: bioblue.transforms.DeepsunImageMaskProduct
  

  val_dataset:
    _target_: bioblue.dataset.DeepsunMaskedClassificationDatasetV2
    partition: "val"
    dtypes: ${use_dtypes}
    classes: ${use_classes}
    transforms:
      - _target_: bioblue.transforms.DeepsunRotateAndCropAroundGroup
        standard_height: 128
        standard_width: 128
      - _target_: bioblue.transforms.DeepsunImageMaskProduct
   
  test_dataset:     
    _target_: bioblue.dataset.DeepsunMaskedClassificationDatasetV2
    partition: "test"
    dtypes: ${use_dtypes}
    classes: ${use_classes}
    transforms:
      - _target_: bioblue.transforms.DeepsunRotateAndCropAroundGroup
        standard_height: 128
        standard_width: 128
      - _target_: bioblue.transforms.DeepsunImageMaskProduct

callbacks: []
